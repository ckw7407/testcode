echo "# testcode" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/ckw7407/testcode.git
git push -u origin main

git remote add origin https://github.com/ckw7407/testcode.git
git branch -M main
git push -u origin main


==========================================

1) 홈 디렉토리로 이동

$ cd ~
2) 새 디렉토리에 디렉토리명을 생성

$ mkdir [디렉토리명]
3) [디렉토리명]로 이동

$ cd [디렉토리명]
4) 부모 디렉토리로 이동

$ cd ..
5) 현재 경로를 출력 // print working directory

$ pwd
6) 디렉토리의 내용을 출력

$ ls
7) 디렉토리의 폴더 상세 정보까지 출력

$ ls -l
8) 디렉토리의 숨김 파일과 디렉토리까지 출력

======================================= git start

2. git 유저 / 업로드 설정
1) 현재 위치에서 지역 저장소를 생성

$ git init
2) 깃 환경에서 사용자 이름을 [사용자명]으로 지정

$ git config --global user.name "[사용자명]"
3) 깃 환경에서 사용자 이메일을 [사용자이메일명]으로 지정

$ git config --global user.email "[사용자이메일명]"
4) 깃의 상태를 확인

$ git status(빨간색)

$ git add .

$ git status(초록색)

$ git commit -m "first commit"

$ git remote add origin https://github.com/ckw7407/testcode.git

$ git remote -v

$ git push origin master

$ git remote rm origin

=========================================== git end

$ ls -a
tip: 옵션은 합쳐서 ls -al 처럼 사용이 가능하다.

9) 파일이 있는 디렉토리를 내용물과 함께 삭제

$ rm -r [디렉토리명]
10) vi 편집기로 [파일명.확장자명] 파일을 작성

$ vim [파일명.확장자명]
11) 터미널 창의 내용을 삭제

$ clear
12) 터미널 창을 종료

$ exit
