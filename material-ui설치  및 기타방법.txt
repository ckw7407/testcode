1.node.js 설치

node -v

2. 작업폴더 생성 후 이동

npm install -g create-react-app

3.리액트 프로젝트 생성

1 create-react-app management
2. yarn start
3. npm install -g yarn ( 설치가 안된경우에만 )

6.git허브 사용하기

7.visual studio code의  왼쪽 깃 태그 클릭

8. +버튼 클릭한다.

9.comment 입력

10. commit 버튼 입력

11. 터미널 창에서  git 명령어 입력

git remote add origin 깃허브 주소
git push --set-upstream origin master

4. yarn add @mui/material @emotion/react @emotion/styled


5. root 폴더에서 client 폴더를 만들고 root폴더의 내용을 모두 잘라내기해서 이동한다.
6. root 폴더에 package.json파일을 만든다
7. root 폴더에 client폴더의 .gitignore파일을 복사해서 붙여넣기 한다.
8. root 폴더에서 npm install 을 설치 한다.
9. root 폴더에서 npm install -D nodemon을 설치 한다.

13. node.js express 서버 구성하기

10. root 폴더 server.js 서버 파일을 만든다.
11. yarn dev를 입력하여 서버/클라이언트를 실행한다
12. 모듈오류시 설치를 한다.
13. client폴더에서 npm install http-proxy-middleware 설치
13. client폴더 src 폴더안에 ( setupProxy.js ) 생성

React - Node.js와 연동시 CORS 이슈 간단하게 해결하기

$ npm install http-proxy-middleware --save
$ # yarn 이용시에는 아래 명령
$ yarn add http-proxy-middleware

-  setupProxy.js 파일내용

const createProxyMiddleware = require('http-proxy-middleware');

module.exports = function(app){
  app.use(
      createProxyMiddleware('/api/customers', {
          target: 'http://localhost:5000/',
          changeOrigin: true
      })
  )
};

/api 는 프록시를 사용할 경로 (path) 이고,

target 은 내가 프록시로 이용할 서버의 주소이다.

changeOrigin은 대상 서버의 구성에 따라 호스트 헤더의 변경을 해주는 옵션이다.

=======================================

14. 서버 재실행 할것 (yarn dev)

//호출순서
// 1.constructor()
// 2.componentWillMount()
// 3.render()
// 4.componentDidMount()

//props or state => shouldComponentUpdate()

15. 서버쪽 .gitignore를 추가 수정한다

#database
/database.json

16. database.json 파일을 생성한다.
17. 서버쪽에서 npm install --save mysql 설치
18. 클라이언트에 CustomerAdd.js 파일 생성
19. 클라이언트에서 npm install --save axios 설치 또는 yarn add axios
20. 서버에서 npm install --save multer 설치
21. 서버에 upload 폴더 생성
22. 서버쪽 .gitignore를 추가 수정한다
23. handleFormSubmit() 함수에서 e.preventDefalut() 작성하지 말것
24. 테이블에 두개의 컬럼 추가
25. 클라언트쪽에 CustomerDelete.js 파일 생성

#upload
/upload








